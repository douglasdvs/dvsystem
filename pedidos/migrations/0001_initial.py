# Generated by Django 5.2 on 2025-07-11 16:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clientes", "0001_initial"),
        ("produtos", "0001_initial"),
        ("vendedores", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CupomDesconto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                (
                    "tipo",
                    models.CharField(
                        choices=[("percentual", "Percentual"), ("valor", "Valor Fixo")],
                        max_length=10,
                    ),
                ),
                ("valor", models.DecimalField(decimal_places=2, max_digits=10)),
                ("data_inicio", models.DateTimeField()),
                ("data_fim", models.DateTimeField()),
                ("quantidade_maxima", models.IntegerField(default=1)),
                ("quantidade_usada", models.IntegerField(default=0)),
                (
                    "valor_minimo_pedido",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("ativo", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(auto_now_add=True)),
                (
                    "codigo",
                    models.CharField(blank=True, editable=False, max_length=20, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("P", "Pendente"),
                            ("A", "Aprovado"),
                            ("B", "Embalado para Envio"),
                            ("F", "Conferido para Envio"),
                            ("E", "Enviado"),
                            ("T", "Entregue"),
                            ("D", "Devolução"),
                            ("R", "Reenviar"),
                            ("C", "Cancelado"),
                        ],
                        default="P",
                        max_length=1,
                    ),
                ),
                (
                    "prioridade",
                    models.CharField(
                        choices=[
                            ("B", "Baixa"),
                            ("N", "Normal"),
                            ("A", "Alta"),
                            ("U", "Urgente"),
                        ],
                        default="N",
                        max_length=1,
                    ),
                ),
                (
                    "desconto",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "taxa_entrega",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "forma_pagamento",
                    models.CharField(
                        choices=[("pix", "PIX"), ("cartao_credito", "Cartão Crédito")],
                        default="pix",
                        max_length=20,
                    ),
                ),
                ("data_entrega_prevista", models.DateField(blank=True, null=True)),
                ("data_entrega_realizada", models.DateField(blank=True, null=True)),
                (
                    "arquivo_arte",
                    models.FileField(
                        blank=True,
                        help_text="JPG, PNG ou PDF até 2MB",
                        null=True,
                        upload_to="pedidos/artes/",
                    ),
                ),
                (
                    "arte_aprovada",
                    models.BooleanField(default=False, help_text="Arte aprovada pelo cliente?"),
                ),
                ("data_arte_aprovada", models.DateTimeField(blank=True, null=True)),
                (
                    "arquivo_arte_aprovada",
                    models.FileField(blank=True, null=True, upload_to="pedidos/artes_aprovadas/"),
                ),
                (
                    "observacoes_arte",
                    models.TextField(blank=True, help_text="Observações do cliente sobre a arte"),
                ),
                ("observacoes", models.TextField(blank=True)),
                (
                    "observacoes_internas",
                    models.TextField(
                        blank=True,
                        help_text="Observações internas (não aparece no pedido)",
                    ),
                ),
                (
                    "valor_sinal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor do sinal (60%)",
                        max_digits=8,
                    ),
                ),
                (
                    "valor_restante",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor restante (40%)",
                        max_digits=8,
                    ),
                ),
                (
                    "valor_recebido",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor recebido do cliente",
                        max_digits=10,
                    ),
                ),
                ("sinal_pago", models.BooleanField(default=False)),
                ("data_sinal_pago", models.DateTimeField(blank=True, null=True)),
                ("restante_pago", models.BooleanField(default=False)),
                ("data_restante_pago", models.DateTimeField(blank=True, null=True)),
                (
                    "forma_envio",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("correios", "Correios"),
                            ("loggi", "LOGGI"),
                            ("uber", "Uber"),
                            ("proprio", "Entrega Própria"),
                        ],
                        max_length=20,
                    ),
                ),
                ("codigo_rastreio", models.CharField(blank=True, max_length=50)),
                ("data_envio", models.DateTimeField(blank=True, null=True)),
                ("data_entrega", models.DateTimeField(blank=True, null=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "atualizado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pedidos_atualizados_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clientes.cliente",
                    ),
                ),
                (
                    "criado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pedidos_criados_por",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cupom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="pedidos.cupomdesconto",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pedidos_criados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vendedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pedidos",
                        to="vendedores.vendedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pedido",
                "verbose_name_plural": "Pedidos",
                "ordering": ["-criado_em"],
            },
        ),
        migrations.CreateModel(
            name="ItemPedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantidade",
                    models.DecimalField(decimal_places=2, default=1, max_digits=8),
                ),
                (
                    "preco_unitario",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "desconto_item",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("observacoes", models.TextField(blank=True)),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="produtos.produto",
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="pedidos.pedido",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricoPedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("criacao", "Criação"),
                            ("edicao", "Edição"),
                            ("status", "Mudança de Status"),
                            ("cancelamento", "Cancelamento"),
                            ("observacao", "Observação"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status_anterior",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("P", "Pendente"),
                            ("A", "Aprovado"),
                            ("B", "Embalado para Envio"),
                            ("F", "Conferido para Envio"),
                            ("E", "Enviado"),
                            ("T", "Entregue"),
                            ("D", "Devolução"),
                            ("R", "Reenviar"),
                            ("C", "Cancelado"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "status_novo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("P", "Pendente"),
                            ("A", "Aprovado"),
                            ("B", "Embalado para Envio"),
                            ("F", "Conferido para Envio"),
                            ("E", "Enviado"),
                            ("T", "Entregue"),
                            ("D", "Devolução"),
                            ("R", "Reenviar"),
                            ("C", "Cancelado"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("descricao", models.TextField()),
                ("data", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico",
                        to="pedidos.pedido",
                    ),
                ),
            ],
            options={
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="AnexoPedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("arquivo", models.FileField(upload_to="pedidos/anexos/")),
                ("descricao", models.CharField(blank=True, max_length=255)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="anexos",
                        to="pedidos.pedido",
                    ),
                ),
            ],
            options={
                "ordering": ["-criado_em"],
            },
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["cliente"], name="pedidos_ped_cliente_06d92d_idx"),
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["data"], name="pedidos_ped_data_06f465_idx"),
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["status"], name="pedidos_ped_status_65e537_idx"),
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["codigo"], name="pedidos_ped_codigo_ea9420_idx"),
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["data_entrega"], name="pedidos_ped_data_en_a47865_idx"),
        ),
        migrations.AddIndex(
            model_name="pedido",
            index=models.Index(fields=["arte_aprovada"], name="pedidos_ped_arte_ap_c23170_idx"),
        ),
    ]
