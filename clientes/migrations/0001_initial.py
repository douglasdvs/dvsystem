# Generated by Django 5.2 on 2025-07-11 16:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProgramaFidelidade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                (
                    "pontos_por_real",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "valor_por_ponto",
                    models.DecimalField(decimal_places=2, default=0.01, max_digits=5),
                ),
                ("pontos_minimos_resgate", models.IntegerField(default=100)),
                ("ativo", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Segmento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Segmento",
                "verbose_name_plural": "Segmentos",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=50, unique=True, verbose_name="Nome"),
                ),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="Slug"),
                ),
                (
                    "cor",
                    models.CharField(
                        default="#000000",
                        help_text="Cor em formato hexadecimal (ex: #FF0000)",
                        max_length=7,
                        verbose_name="Cor",
                    ),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="TipoCliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Tipo de Cliente",
                "verbose_name_plural": "Tipos de Cliente",
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(blank=True, editable=False, max_length=10, unique=True),
                ),
                (
                    "cpf_cnpj",
                    models.CharField(
                        blank=True,
                        help_text="Formato: 000.000.000-00 ou 00.000.000/0000-00",
                        max_length=18,
                        null=True,
                        verbose_name="CPF/CNPJ",
                    ),
                ),
                ("nome", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "email",
                    models.EmailField(blank=True, max_length=100, null=True, verbose_name="E-mail"),
                ),
                (
                    "telefone",
                    models.CharField(
                        help_text="Formato: (00) 00000-0000",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Formato válido: (00) 00000-0000",
                                regex="^\\(\\d{2}\\) \\d{5}-\\d{4}$",
                            )
                        ],
                        verbose_name="Telefone (WhatsApp)",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "observacao",
                    models.TextField(blank=True, null=True, verbose_name="Observação"),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Cadastro",
                    ),
                ),
                ("pontos_fidelidade", models.IntegerField(default=0)),
                (
                    "nome_loja",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nome da Loja",
                    ),
                ),
                (
                    "criado_por",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "programa_fidelidade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="clientes.programafidelidade",
                    ),
                ),
                (
                    "segmento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clientes",
                        to="clientes.segmento",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="clientes",
                        to="clientes.tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "tipo_cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clientes",
                        to="clientes.tipocliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Endereco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cep", models.CharField(max_length=9, verbose_name="CEP")),
                (
                    "logradouro",
                    models.CharField(max_length=255, verbose_name="Logradouro"),
                ),
                ("numero", models.CharField(max_length=10, verbose_name="Número")),
                (
                    "complemento",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                ("bairro", models.CharField(max_length=100, verbose_name="Bairro")),
                ("cidade", models.CharField(max_length=100, verbose_name="Cidade")),
                (
                    "uf",
                    models.CharField(
                        choices=[
                            ("AC", "Acre"),
                            ("AL", "Alagoas"),
                            ("AP", "Amapá"),
                            ("AM", "Amazonas"),
                            ("BA", "Bahia"),
                            ("CE", "Ceará"),
                            ("DF", "Distrito Federal"),
                            ("ES", "Espírito Santo"),
                            ("GO", "Goiás"),
                            ("MA", "Maranhão"),
                            ("MT", "Mato Grosso"),
                            ("MS", "Mato Grosso do Sul"),
                            ("MG", "Minas Gerais"),
                            ("PA", "Pará"),
                            ("PB", "Paraíba"),
                            ("PR", "Paraná"),
                            ("PE", "Pernambuco"),
                            ("PI", "Piauí"),
                            ("RJ", "Rio de Janeiro"),
                            ("RN", "Rio Grande do Norte"),
                            ("RS", "Rio Grande do Sul"),
                            ("RO", "Rondônia"),
                            ("RR", "Roraima"),
                            ("SC", "Santa Catarina"),
                            ("SP", "São Paulo"),
                            ("SE", "Sergipe"),
                            ("TO", "Tocantins"),
                        ],
                        max_length=2,
                        verbose_name="UF",
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enderecos",
                        to="clientes.cliente",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["nome"], name="clientes_cl_nome_b2cdde_idx"),
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["cpf_cnpj"], name="clientes_cl_cpf_cnp_0eeb49_idx"),
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["email"], name="clientes_cl_email_eae461_idx"),
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["ativo"], name="clientes_cl_ativo_332763_idx"),
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["data_cadastro"], name="clientes_cl_data_ca_5c06a8_idx"),
        ),
    ]
